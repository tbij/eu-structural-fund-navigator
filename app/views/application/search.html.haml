%p Discover who gets what from the EU Structural Funds
#search
  - false && form_tag(search_url, :method => :get) do
    %span.query= text_field_tag :q, h(@query)
    %span.submit= submit_tag 'Search'
  - form_tag(translate_and_search_url, :method => :get) do
    %span.query= text_field_tag :q, h(@query)
    %span.submit= submit_tag 'Search'

#facets
  - if @countries.size == 1
    .country
      = render :partial => 'facet', :object => @countries, :locals => {:facet_name => :fund_country, :total => @countries.size}
  - else
    .countries
      .countries1
        = render :partial => 'facet', :object => @countries.in_groups(4).first, :locals => {:facet_name => :fund_country, :total => @countries.size}  
      .countries2
        = render :partial => 'facet', :object => @countries.in_groups(4)[1], :locals => {:facet_name => :fund_country, :total => @countries.size}  
      .countries3
        = render :partial => 'facet', :object => @countries.in_groups(4)[2], :locals => {:facet_name => :fund_country, :total => @countries.size}  
      .countries4
        = render :partial => 'facet', :object => @countries.in_groups(4).last, :locals => {:facet_name => :fund_country, :total => @countries.size}  
  - if @countries.size == 1
    .regions
      .regions1
        = render :partial => 'facet', :object => @regions.in_groups(2).first, :locals => {:facet_name => :fund_region, :total => @regions.size}
      .regions2
        = render :partial => 'facet', :object => @regions.in_groups(2).last, :locals => {:facet_name => :fund_region, :total => @regions.size}
  - unless @results.size == 0
    - csv_params = params.merge('f' => 'csv')
    - csv_params.delete(:page)
    .to_csv= link_to 'Save to CSV', csv_params

- if @results.size == 0
  %p No results found.
- else
  #eu_amount
    %p.eu_amount
      %span 
        A declared
      %span.eu_amount= number_to_currency(@min_eu_amount_in_euros, :unit => "&euro;", :precision => 0)
      %span
        in allocated EU Funds
    %p.eu_amount
      %span 
        An estimated
      %span.eu_amount= number_to_currency(@amount_estimated_eu_funding_in_euro, :unit => "&euro;", :precision => 0)
      %span
        in total EU Funding
  .items
    %table
      %thead
        %tr
          %th
            Country
            %br
            &amp; Region
          %th Beneficiary
          %th
            Project
            %br
            &amp; Description
          %th
            Estimated
            %br
            EU Funding
          %th Fund
      %tbody
        - @results.each_with_index do |item, index|
          %tr
            %td
              = h item.fund_file.countries.first.name.to_s.strip
              - unless item.fund_file.region[/all regions/i]
                %br
                = h item.fund_file.region.to_s.strip
            %td
              = h item.beneficiary.to_s.strip
              - unless item.subcontractor.blank?
                %br
                Subcontractors:
                = item.subcontractor
            %td{:class => item.language_code}
              %span.description{:id => "description_#{index}"}
                - if item.project_title.blank?
                  = h item.description.to_s.strip
                - else
                  = h item.project_title.to_s.strip
                  %br
                  = h item.description.to_s.strip
              %br
              %span.translation{:id => "translation_#{index}"}
            %td.amount
              = item.amount_estimated_eu_funding ? "#{number_with_delimiter(item.amount_estimated_eu_funding)} #{h(item.currency)}" : ''
              - if item.currency != 'EUR'
                %br
                %span.euro_conversion= item.amount_estimated_eu_funding_in_euro ? "#{number_with_delimiter(item.amount_estimated_eu_funding_in_euro)} EUR" : ''
            %td= h item.fund_name.to_s.strip
  #pagination
    %p.pagination
      - #{number_with_delimiter(@total_results)} results
      = will_paginate(@result_set.hits, :inner_window => 3, :outer_window => 2).to_s.sub('&raquo;','').sub('&laquo;','')
